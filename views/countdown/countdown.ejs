<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <main>
    <header>
      <h1>Countdown Timer</h1>
    </header>
    <section class="content">
      <div class="timer">
      <div class="timer__controls">
        <button data-time="20" class="timer__button">20 Secs</button>
        <button data-time="300" class="timer__button">Workout 10</button>
        <button data-time="900" class="timer__button">Meditating 15</button>
        <button data-time="1200" class="timer__button">Breathing Practice 20</button>
        <button data-time="3600" class="timer__button">Break</button>
        <form name="customForm" id="custom">
          <input type="text" name="minutes" placeholder="Enter Minutes">
        </form>
      </div>
      <div class="display">
        <h1 class="display__time-left">0:00</h1>
        <p class="display__end-time"></p>
      </div>
    </div>
    </section>
  </main>
  <style>
    .content {
      padding: 0;
    }
    
    .display__time-left {
      font-weight: 100;
      font-size: 14rem;
      line-height: 22rem;
      margin: 0;
      color: red;
      text-shadow: 4px 4px 0 rgba(0,0,0,0.05);
    }
    
    .timer {
      display: flex;
      min-height: 75vh;
      flex-direction: column;
    }
    
    .timer__controls {
      display: flex;
    }
    
    .timer__controls > * {
      flex: 1;
    }
    
    .timer__controls form {
      flex: 1;
      display: flex;
    }
    
    .timer__controls input {
      flex: 1;
      border: 0;
      padding: 1rem;
      border-bottom: 3px solid rgba(0,0,0,0.2);
      @include font-sans;
    }
    
    .timer__button {
      background: none;
      border: 0;
      cursor: pointer;
      color: red-dark;
      font-size: 1rem;
      text-transform: uppercase;
      background: rgba(0,0,0,0.1);
      border-bottom: 3px solid rgba(0,0,0,0.2);
      border-right: 1px solid rgba(0,0,0,0.2);
      padding: 1rem;
      @include font-sans;
    }
    
    .timer__button:hover,
    .timer__button:focus {
      background: rgba(0,0,0,0.2);
      outline: 0;
      color: red;
    }
    
    .display {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }
    
    .display__end-time {
      font-size: 4rem;
      color: red;
    }
  </style>
  <script>
    let countdown;
const timerDisplay = document.querySelector('.display__time-left');
const endTime = document.querySelector('.display__end-time');
const buttons = document.querySelectorAll('[data-time]');

function timer(seconds) {
  // clear existing countdowns
  clearInterval(countdown);
  
  const now = Date.now();
  const then = now + (seconds * 1000);
  displayTimeLeft(seconds);
  displayEndTime(then);
  
  countdown = setInterval(() => {
    const secondsLeft = Math.round((then - Date.now()) / 1000);
    // check if we should stop
    if(secondsLeft < 0) {
      clearInterval(countdown);
      return;
    }
    displayTimeLeft(secondsLeft);
  }, 1000);
}

function displayTimeLeft(seconds) {
  const minutes = Math.floor(seconds / 60);
  const remainderSeconds = seconds % 60;
  const display = `${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;
  document.title = display;
  timerDisplay.textContent = display;
}

function displayEndTime(timestamp) {
  const end = new Date(timestamp);
  const hour = end.getHours();
  const adjustedHour = hour > 12 ? hour - 12 : hour;
  const ampm = hour > 12 ? 'pm' : 'am';
  const minutes = end.getMinutes();
  endTime.textContent = `Be Back At ${adjustedHour}:${minutes < 10 ? '0' : ''}${minutes}${ampm}`;
}

function startTimer() {
  const seconds = parseInt(this.dataset.time);
  timer(seconds);
}

buttons.forEach(button => button.addEventListener('click', startTimer));
document.customForm.addEventListener('submit', function(e) {
  e.preventDefault();
  const mins = this.minutes.value;
  this.reset();
  timer (mins * 60);
});
  </script>
</body>
</html>